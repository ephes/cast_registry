- hosts: localhost
  tasks:
    - name: "Include secret vars"
      include_vars: secrets.yml

    - name: "Include public vars"
      include_vars: vars.yml

    - name: Add the unix user with a bash shell
      user:
        name: "{{ username }}"
        shell: /bin/bash

    - name: Create a new postgres database
      # install role first:
      # ansible-galaxy collection install community.postgresql
      community.general.postgresql_db:
        name: "{{ postgres_database }}"
        state: present
      become: true
      become_user: postgres

    - name: Create a new postgres user
      community.general.postgresql_user:
        db: "{{ postgres_database }}"
        name: "{{ postgres_user }}"
        password: "{{ postgres_password }}"
        state: present
      become: true
      become_user: postgres

    - name: Git checkout repository
      git:
        repo: "https://github.com/ephes/cast_registry"
        version: "main"
        dest: "{{ site_path }}"
      become: true
      become_user: "{{ username }}"

    - name: Create .env file
      template:
        src: env.template.j2
        dest: "{{ site_path }}/.env"
        mode: "0600"
        owner: "{{ username }}"

    - name: Create gunicorn start script
      template:
        src: gunicorn.sh.j2
        dest: "{{ site_path }}/gunicorn.sh"
        owner: "{{ username }}"
        mode: "0755"

    - name: Create bash_profile
      template:
        src: bash_profile.j2
        dest: "{{ home_path }}/.bash_profile"
        owner: "{{ username }}"
        mode: "0644"

    - name: Install poetry
      shell: curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python3.10 -
      args:
        warn: no
      become: true
      become_user: "{{ username }}"

    - name: Install poetry dependencies
      shell: "{{ home_path }}/.poetry/bin/poetry install"
      args:
        chdir: "{{ site_path }}"
      become: true
      become_user: "{{ username }}"

    - name: Find path to poetry venv interpreter
      shell: "find {{ home_path }}/.cache/pypoetry/virtualenvs -name python | grep bin"
      register: find_python

    - name: Set python bin path
      set_fact:
        python_bin_path={{ find_python.stdout }}

    - name: Upgrade pip
      shell: "{{ python_bin_path }} -m pip install --upgrade pip"
      args:
        chdir: "{{ site_path }}"
      become: true
      become_user: "{{ username }}"

    - name: Run django migrations
      shell: "{{ python_bin_path }} manage.py migrate"
      args:
        chdir: "{{ site_path }}"
      become: true
      become_user: "{{ username }}"

    - name: Run django collectstatic
      shell: "{{ python_bin_path }} manage.py collectstatic --noinput"
      args:
        chdir: "{{ site_path }}"
      become: true
      become_user: "{{ username }}"
      environment:
        DJANGO_SETTINGS_MODULE: "{{ django_settings_module }}"

    - name: Create traefik service config
      template:
        src: traefik.template.j2
        dest: "{{ traefik_config_path }}"
        mode: '0644'

    - name: Create systemd service unit file
      template:
        src: systemd.service.j2
        dest: "{{ systemd_unit_path }}"

    - name: Make sure cast gunicorn service is running
      systemd:
        state: restarted
        name: "{{ username }}"
